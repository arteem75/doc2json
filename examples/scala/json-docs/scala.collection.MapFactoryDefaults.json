{
  "name": "scala.collection.MapFactoryDefaults",
  "type_parameters": [
    "K",
    "+V",
    "+CC[x, y] <: scala.collection.IterableOps[(x, y), scala.collection.Iterable, scala.collection.Iterable[(x, y)]]",
    "+WithFilterCC[x] <: scala.collection.IterableOps[x, scala.collection.MapFactoryDefaults.WithFilterCC, scala.collection.MapFactoryDefaults.WithFilterCC[x]] with scala.collection.Iterable[x]"
  ],
  "implements": [
    "scala.collection.MapOps[K, V, CC, CC[K, V]]",
    "scala.collection.IterableOps[(K, V), scala.collection.MapFactoryDefaults.WithFilterCC, CC[K, V]]"
  ],
  "inherits": [
    "scala.collection.MapOps[K, V, CC, CC[K, V]]",
    "scala.collection.IterableOps[(K, V), scala.collection.MapFactoryDefaults.WithFilterCC, CC[K, V]]"
  ],
  "class_type": 1,
  "methods": [
    {
      "name": "fromSpecific",
      "parameters": [
        "scala.collection.IterableOnce[(K, V)]"
      ],
      "type_parameters": [],
      "return_type": "CC[K, V]",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "protected"
    },
    {
      "name": "withFilter",
      "parameters": [
        "((K, V)) => scala.Boolean"
      ],
      "type_parameters": [],
      "return_type": "scala.collection.MapOps.WithFilter[K, V, scala.collection.MapFactoryDefaults.WithFilterCC, CC]",
      "receiver": null,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    }
  ],
  "fields": [
    {
      "name": "empty",
      "type": "CC[K, V]",
      "is_final": false,
      "is_override": false,
      "receiver": null,
      "type_parameters": [],
      "access_mod": "public",
      "is_static": false
    },
    {
      "name": "newSpecificBuilder",
      "type": "scala.collection.mutable.Builder[(K, V), CC[K, V]]",
      "is_final": false,
      "is_override": false,
      "receiver": null,
      "type_parameters": [],
      "access_mod": "protected",
      "is_static": false
    }
  ],
  "is_class": true,
  "access_mod": "public",
  "language": "scala"
}