{
  "frozen": true,
  "data_type": "struct",
  "name": "Array",
  "type_parameters": [
    "Element"
  ],
  "methods": [
    {
      "name": "subscript",
      "type_parameters": [],
      "parameters": [
        "swift.int"
      ],
      "throws": false,
      "return_type": "Element",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "subscript",
      "type_parameters": [],
      "parameters": [
        "swift.range<swift.int>"
      ],
      "throws": false,
      "return_type": "swift.arrayslice<Element>",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "subscript",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "R"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "subscript",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "R"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "subscript",
      "type_parameters": [],
      "parameters": [
        "(swift.unboundedrange_) -> ()"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "randomElement",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "Self.Element?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "randomElement",
      "type_parameters": [
        "T"
      ],
      "parameters": [
        "using: inout T"
      ],
      "throws": false,
      "return_type": "Self.Element?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "append",
      "type_parameters": [],
      "parameters": [
        "Element"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "insert",
      "type_parameters": [],
      "parameters": [
        "Element",
        "at: swift.int"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "insert",
      "type_parameters": [
        "C"
      ],
      "parameters": [
        "contentsOf: C",
        "at: Self.Index"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "replaceSubrange",
      "type_parameters": [
        "C"
      ],
      "parameters": [
        "swift.range<swift.int>",
        "with: C"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "replaceSubrange",
      "type_parameters": [
        "C",
        " R"
      ],
      "parameters": [
        "R",
        "with: C"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "reserveCapacity",
      "type_parameters": [],
      "parameters": [
        "swift.int"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "append",
      "type_parameters": [
        "S"
      ],
      "parameters": [
        "contentsOf: S"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "append",
      "type_parameters": [
        "S"
      ],
      "parameters": [
        "contentsOf: S"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "+",
      "type_parameters": [
        "Other"
      ],
      "parameters": [
        "Other",
        "Self"
      ],
      "throws": false,
      "return_type": "Self",
      "conditional": false,
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "+",
      "type_parameters": [
        "Other"
      ],
      "parameters": [
        "Self",
        "Other"
      ],
      "throws": false,
      "return_type": "Self",
      "conditional": false,
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "+",
      "type_parameters": [],
      "parameters": [
        "swift.array<Element>",
        "swift.array<Element>"
      ],
      "throws": false,
      "return_type": "swift.array<Element>",
      "conditional": false,
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "+",
      "type_parameters": [
        "Other"
      ],
      "parameters": [
        "Self",
        "Other"
      ],
      "throws": false,
      "return_type": "Self",
      "conditional": false,
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "+=",
      "type_parameters": [
        "Other"
      ],
      "parameters": [
        "inout Self",
        "Other"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "+=",
      "type_parameters": [],
      "parameters": [
        "inout swift.array<Element>",
        "swift.array<Element>"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "remove",
      "type_parameters": [],
      "parameters": [
        "at: swift.int"
      ],
      "throws": false,
      "return_type": "Element",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeFirst",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "Self.Element",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeFirst",
      "type_parameters": [],
      "parameters": [
        "swift.int"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeLast",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "Self.Element",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeLast",
      "type_parameters": [],
      "parameters": [
        "swift.int"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeSubrange",
      "type_parameters": [],
      "parameters": [
        "swift.range<Self.Index>"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeSubrange",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "R"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeAll",
      "type_parameters": [],
      "parameters": [
        "where: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "removeAll",
      "type_parameters": [],
      "parameters": [
        "keepingCapacity: swift.bool"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "popLast",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "Self.Element?",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "contains",
      "type_parameters": [],
      "parameters": [
        "Self.Element"
      ],
      "throws": false,
      "return_type": "swift.bool",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "contains",
      "type_parameters": [],
      "parameters": [
        "where: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "swift.bool",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "allSatisfy",
      "type_parameters": [],
      "parameters": [
        "(Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "swift.bool",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "first",
      "type_parameters": [],
      "parameters": [
        "where: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.Element?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "firstIndex",
      "type_parameters": [],
      "parameters": [
        "of: Self.Element"
      ],
      "throws": false,
      "return_type": "Self.Index?",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "index",
      "type_parameters": [],
      "parameters": [
        "of: Self.Element"
      ],
      "throws": false,
      "return_type": "Self.Index?",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "firstIndex",
      "type_parameters": [],
      "parameters": [
        "where: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.Index?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "last",
      "type_parameters": [],
      "parameters": [
        "where: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.Element?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "lastIndex",
      "type_parameters": [],
      "parameters": [
        "of: Self.Element"
      ],
      "throws": false,
      "return_type": "Self.Index?",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "lastIndex",
      "type_parameters": [],
      "parameters": [
        "where: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.Index?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "min",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "Self.Element?",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "min",
      "type_parameters": [],
      "parameters": [
        "by: (Self.Element, Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.Element?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "max",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "Self.Element?",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "max",
      "type_parameters": [],
      "parameters": [
        "by: (Self.Element, Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.Element?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "prefix",
      "type_parameters": [],
      "parameters": [
        "swift.int"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "prefix",
      "type_parameters": [],
      "parameters": [
        "through: Self.Index"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "prefix",
      "type_parameters": [],
      "parameters": [
        "upTo: Self.Index"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "prefix",
      "type_parameters": [],
      "parameters": [
        "while: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "suffix",
      "type_parameters": [],
      "parameters": [
        "swift.int"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "suffix",
      "type_parameters": [],
      "parameters": [
        "from: Self.Index"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "dropFirst",
      "type_parameters": [],
      "parameters": [
        "swift.int"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "dropLast",
      "type_parameters": [],
      "parameters": [
        "swift.int"
      ],
      "throws": false,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "drop",
      "type_parameters": [],
      "parameters": [
        "while: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.SubSequence",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "map",
      "type_parameters": [
        "T"
      ],
      "parameters": [
        "(Self.Element) throws -> T"
      ],
      "throws": true,
      "return_type": "[T]",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "flatMap",
      "type_parameters": [
        "SegmentOfResult"
      ],
      "parameters": [
        "(Self.Element) throws -> SegmentOfResult"
      ],
      "throws": true,
      "return_type": "[SegmentOfResult.Element]",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "flatMap",
      "type_parameters": [
        "ElementOfResult"
      ],
      "parameters": [
        "(Self.Element) throws -> ElementOfResult?"
      ],
      "throws": true,
      "return_type": "[ElementOfResult]",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "compactMap",
      "type_parameters": [
        "ElementOfResult"
      ],
      "parameters": [
        "(Self.Element) throws -> ElementOfResult?"
      ],
      "throws": true,
      "return_type": "[ElementOfResult]",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "reduce",
      "type_parameters": [
        "Result"
      ],
      "parameters": [
        "Result",
        "(Result, Self.Element) throws -> Result"
      ],
      "throws": true,
      "return_type": "Result",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "reduce",
      "type_parameters": [
        "Result"
      ],
      "parameters": [
        "into: Result",
        "(inout Result, Self.Element) throws -> ()"
      ],
      "throws": true,
      "return_type": "Result",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "forEach",
      "type_parameters": [],
      "parameters": [
        "(Self.Element) throws -> swift.void"
      ],
      "throws": true,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "enumerated",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "swift.enumeratedsequence<Self>",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "makeIterator",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "swift.indexingiterator<Self>",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "sort",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "sort",
      "type_parameters": [],
      "parameters": [
        "by: (Self.Element, Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "sorted",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "[Self.Element]",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "sorted",
      "type_parameters": [],
      "parameters": [
        "by: (Self.Element, Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "[Self.Element]",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "reverse",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "reversed",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "swift.reversedcollection<Self>",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "shuffle",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "shuffle",
      "type_parameters": [
        "T"
      ],
      "parameters": [
        "using: inout T"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "shuffled",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "[Self.Element]",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "shuffled",
      "type_parameters": [
        "T"
      ],
      "parameters": [
        "using: inout T"
      ],
      "throws": false,
      "return_type": "[Self.Element]",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "partition",
      "type_parameters": [],
      "parameters": [
        "by: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "Self.Index",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "swapAt",
      "type_parameters": [],
      "parameters": [
        "Self.Index",
        "Self.Index"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "split",
      "type_parameters": [],
      "parameters": [
        "separator: Self.Element",
        "maxSplits: swift.int",
        "omittingEmptySubsequences: swift.bool"
      ],
      "throws": false,
      "return_type": "[Self.SubSequence]",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "split",
      "type_parameters": [],
      "parameters": [
        "maxSplits: swift.int",
        "omittingEmptySubsequences: swift.bool",
        "whereSeparator: (Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "[Self.SubSequence]",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "joined",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "swift.flattensequence<Self>",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "joined",
      "type_parameters": [
        "Separator"
      ],
      "parameters": [
        "separator: Separator"
      ],
      "throws": false,
      "return_type": "swift.joinedsequence<Self>",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "joined",
      "type_parameters": [],
      "parameters": [
        "separator: swift.string"
      ],
      "throws": false,
      "return_type": "swift.string",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "joined",
      "type_parameters": [],
      "parameters": [
        "separator: swift.string"
      ],
      "throws": false,
      "return_type": "swift.string",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "applying",
      "type_parameters": [],
      "parameters": [
        "swift.collectiondifference<Self.Element>"
      ],
      "throws": false,
      "return_type": "Self?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "difference",
      "type_parameters": [
        "C"
      ],
      "parameters": [
        "from: C"
      ],
      "throws": false,
      "return_type": "swift.collectiondifference<Self.Element>",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "difference",
      "type_parameters": [
        "C"
      ],
      "parameters": [
        "from: C",
        "by: (C.Element, Self.Element) -> swift.bool"
      ],
      "throws": false,
      "return_type": "swift.collectiondifference<Self.Element>",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "==",
      "type_parameters": [],
      "parameters": [
        "swift.array<Element>",
        "swift.array<Element>"
      ],
      "throws": false,
      "return_type": "swift.bool",
      "conditional": true,
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "!=",
      "type_parameters": [],
      "parameters": [
        "Self",
        "Self"
      ],
      "throws": false,
      "return_type": "swift.bool",
      "conditional": false,
      "is_static": true,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "elementsEqual",
      "type_parameters": [
        "OtherSequence"
      ],
      "parameters": [
        "Otherswift.sequence"
      ],
      "throws": false,
      "return_type": "swift.bool",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "elementsEqual",
      "type_parameters": [
        "OtherSequence"
      ],
      "parameters": [
        "Otherswift.sequence",
        "by: (Self.Element, Otherswift.sequence.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "swift.bool",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "starts",
      "type_parameters": [
        "PossiblePrefix"
      ],
      "parameters": [
        "with: PossiblePrefix"
      ],
      "throws": false,
      "return_type": "swift.bool",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "starts",
      "type_parameters": [
        "PossiblePrefix"
      ],
      "parameters": [
        "with: PossiblePrefix",
        "by: (Self.Element, PossiblePrefix.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "swift.bool",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "lexicographicallyPrecedes",
      "type_parameters": [
        "OtherSequence"
      ],
      "parameters": [
        "Otherswift.sequence"
      ],
      "throws": false,
      "return_type": "swift.bool",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "lexicographicallyPrecedes",
      "type_parameters": [
        "OtherSequence"
      ],
      "parameters": [
        "Otherswift.sequence",
        "by: (Self.Element, Self.Element) throws -> swift.bool"
      ],
      "throws": true,
      "return_type": "swift.bool",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "index",
      "type_parameters": [],
      "parameters": [
        "after: swift.int"
      ],
      "throws": false,
      "return_type": "swift.int",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "formIndex",
      "type_parameters": [],
      "parameters": [
        "after: inout swift.int"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "index",
      "type_parameters": [],
      "parameters": [
        "before: swift.int"
      ],
      "throws": false,
      "return_type": "swift.int",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "formIndex",
      "type_parameters": [],
      "parameters": [
        "before: inout swift.int"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "index",
      "type_parameters": [],
      "parameters": [
        "swift.int",
        "offsetBy: swift.int"
      ],
      "throws": false,
      "return_type": "swift.int",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "formIndex",
      "type_parameters": [],
      "parameters": [
        "inout Self.Index",
        "offsetBy: swift.int"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "index",
      "type_parameters": [],
      "parameters": [
        "swift.int",
        "offsetBy: swift.int",
        "limitedBy: swift.int"
      ],
      "throws": false,
      "return_type": "swift.int?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "formIndex",
      "type_parameters": [],
      "parameters": [
        "inout Self.Index",
        "offsetBy: swift.int",
        "limitedBy: Self.Index"
      ],
      "throws": false,
      "return_type": "swift.bool",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "distance",
      "type_parameters": [],
      "parameters": [
        "from: swift.int",
        "to: swift.int"
      ],
      "throws": false,
      "return_type": "swift.int",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "withUnsafeBufferPointer",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "(swift.unsafebufferpointer<Element>) throws -> R"
      ],
      "throws": true,
      "return_type": "R",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "withUnsafeMutableBufferPointer",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "(inout swift.unsafemutablebufferpointer<Element>) throws -> R"
      ],
      "throws": true,
      "return_type": "R",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "withUnsafeBytes",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "(swift.unsaferawbufferpointer) throws -> R"
      ],
      "throws": true,
      "return_type": "R",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "withUnsafeMutableBytes",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "(swift.unsafemutablerawbufferpointer) throws -> R"
      ],
      "throws": true,
      "return_type": "R",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "withContiguousStorageIfAvailable",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "(swift.unsafebufferpointer<Element>) throws -> R"
      ],
      "throws": true,
      "return_type": "R?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "withContiguousMutableStorageIfAvailable",
      "type_parameters": [
        "R"
      ],
      "parameters": [
        "(inout swift.unsafemutablebufferpointer<Element>) throws -> R"
      ],
      "throws": true,
      "return_type": "R?",
      "conditional": false,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "encode",
      "type_parameters": [],
      "parameters": [
        "to: swift.encoder"
      ],
      "throws": true,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "encode",
      "type_parameters": [],
      "parameters": [
        "to: swift.encoder",
        "configuration: Element.EncodingConfiguration"
      ],
      "throws": true,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "hash",
      "type_parameters": [],
      "parameters": [
        "into: inout swift.hasher"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": false,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [],
      "parameters": [
        ""
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [
        "S"
      ],
      "parameters": [
        "S"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [
        "S"
      ],
      "parameters": [
        "S"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [],
      "parameters": [
        "repeating: Element",
        "count: swift.int"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [],
      "parameters": [
        "unsafeUninitializedCapacity: swift.int",
        "initializingWith: (inout swift.unsafemutablebufferpointer<Element>, inout swift.int) throws -> swift.void"
      ],
      "throws": true,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [],
      "parameters": [
        "from: swift.decoder"
      ],
      "throws": true,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [],
      "parameters": [
        "from: swift.decoder",
        "configuration: Element.DecodingConfiguration"
      ],
      "throws": true,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [],
      "parameters": [
        "CreateML.MLDataColumn<Element>"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [],
      "parameters": [
        "CreateML.MLUntypedColumn"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init?",
      "type_parameters": [],
      "parameters": [
        "from: CreateML.MLDataValue"
      ],
      "throws": false,
      "return_type": "void",
      "conditional": true,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    },
    {
      "name": "init",
      "type_parameters": [],
      "parameters": [
        "arrayLiteral: Element..."
      ],
      "throws": false,
      "return_type": "void",
      "conditional": false,
      "is_static": false,
      "is_constructor": true,
      "access_mod": "public"
    }
  ],
  "fields": [
    {
      "name": "isEmpty",
      "type": "swift.bool",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "count",
      "type": "swift.int",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "capacity",
      "type": "swift.int",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "first",
      "type": "Self.Element?",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "last",
      "type": "Self.Element?",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "lazy",
      "type": "swift.lazysequence<Self>",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "underestimatedCount",
      "type": "swift.int",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "startIndex",
      "type": "swift.int",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "endIndex",
      "type": "swift.int",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "description",
      "type": "swift.string",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "debugDescription",
      "type": "swift.string",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "customMirror",
      "type": "swift.mirror",
      "conditional": false,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "dataValue",
      "type": "CreateML.MLDataValue",
      "conditional": true,
      "is_static": false,
      "access_mod": "public"
    },
    {
      "name": "dataValueType",
      "type": "CreateML.MLDataValue.CreateML.MLDataValue.ValueType",
      "conditional": true,
      "is_static": true,
      "access_mod": "public"
    },
    {
      "name": "hashValue",
      "type": "swift.int",
      "conditional": true,
      "is_static": false,
      "access_mod": "public"
    }
  ],
  "implements": [
    {
      "name": "AppExtensionScene",
      "conditional": false
    },
    {
      "name": "BidirectionalCollection",
      "conditional": false
    },
    {
      "name": "CVarArg",
      "conditional": false
    },
    {
      "name": "Collection",
      "conditional": false
    },
    {
      "name": "ContiguousBytes",
      "conditional": false
    },
    {
      "name": "CustomDebugStringConvertible",
      "conditional": false
    },
    {
      "name": "CustomReflectable",
      "conditional": false
    },
    {
      "name": "CustomStringConvertible",
      "conditional": false
    },
    {
      "name": "DataProtocol",
      "conditional": false
    },
    {
      "name": "DecodableWithConfiguration",
      "conditional": false
    },
    {
      "name": "EncodableWithConfiguration",
      "conditional": false
    },
    {
      "name": "ExpressibleByArrayLiteral",
      "conditional": false
    },
    {
      "name": "MLDataValueConvertible",
      "conditional": false
    },
    {
      "name": "MutableCollection",
      "conditional": false
    },
    {
      "name": "MutableDataProtocol",
      "conditional": false
    },
    {
      "name": "PositionScaleRange",
      "conditional": false
    },
    {
      "name": "RandomAccessCollection",
      "conditional": false
    },
    {
      "name": "RangeReplaceableCollection",
      "conditional": false
    },
    {
      "name": "RelationshipCollection",
      "conditional": false
    },
    {
      "name": "ResultsCollection",
      "conditional": false
    },
    {
      "name": "ScaleDomain",
      "conditional": false
    },
    {
      "name": "ScaleRange",
      "conditional": false
    },
    {
      "name": "Sequence",
      "conditional": false
    },
    {
      "name": "Decodable",
      "conditional": true
    },
    {
      "name": "Encodable",
      "conditional": true
    },
    {
      "name": "Equatable",
      "conditional": true
    },
    {
      "name": "Hashable",
      "conditional": true
    },
    {
      "name": "Sendable",
      "conditional": true
    }
  ],
  "typealiases": [
    {
      "name": "EncodingConfiguration",
      "conditional": true
    },
    {
      "name": "DecodingConfiguration",
      "conditional": true
    },
    {
      "name": "Index",
      "conditional": false
    },
    {
      "name": "Indices",
      "conditional": false
    },
    {
      "name": "Iterator",
      "conditional": false
    },
    {
      "name": "ArrayLiteralElement",
      "conditional": false
    },
    {
      "name": "SubSequence",
      "conditional": false
    }
  ],
  "inherits": [],
  "language": "swift"
}