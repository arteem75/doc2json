{
  "frozen": "true",
  "data_type": "struct",
  "name": "Array",
  "type_parameters": "['Element']",
  "methods": [
    [
      {
        "name": "randomElement",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": "Self.Element?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "randomElement",
        "type parameters": "T",
        "parameters": "using: inout T",
        "throws": "false",
        "return_type": "Self.Element?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "append",
        "type parameters": null,
        "parameters": "Element",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "insert",
        "type parameters": null,
        "parameters": "Element, at: Int",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "insert",
        "type parameters": "C",
        "parameters": "contentsOf: C, at: Self.Index",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "replaceSubrange",
        "type parameters": "C",
        "parameters": "Range<Int>, with: C",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "replaceSubrange",
        "type parameters": "C, R",
        "parameters": "R, with: C",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "reserveCapacity",
        "type parameters": null,
        "parameters": "Int",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "append",
        "type parameters": "S",
        "parameters": "contentsOf: S",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "append",
        "type parameters": "S",
        "parameters": "contentsOf: S",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "+",
        "type parameters": "Other",
        "parameters": "Other, Self",
        "throws": "false",
        "return_type": "Self",
        "conditional": "false",
        "static": "true",
        "is_constructor": "false"
      },
      {
        "name": "+",
        "type parameters": "Other",
        "parameters": "Self, Other",
        "throws": "false",
        "return_type": "Self",
        "conditional": "false",
        "static": "true",
        "is_constructor": "false"
      },
      {
        "name": "+",
        "type parameters": "Element",
        "parameters": "Array<Element>, Array<Element>",
        "throws": "false",
        "return_type": "Array<Element>",
        "conditional": "false",
        "static": "true",
        "is_constructor": "false"
      },
      {
        "name": "+",
        "type parameters": "Other",
        "parameters": "Self, Other",
        "throws": "false",
        "return_type": "Self",
        "conditional": "false",
        "static": "true",
        "is_constructor": "false"
      },
      {
        "name": "+=",
        "type parameters": "Other",
        "parameters": "inout Self, Other",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "true",
        "is_constructor": "false"
      },
      {
        "name": "+=",
        "type parameters": "Element",
        "parameters": "inout Array<Element>, Array<Element>",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "true",
        "is_constructor": "false"
      },
      {
        "name": "remove",
        "type parameters": null,
        "parameters": "at: Int",
        "throws": "false",
        "return_type": "Element",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "removeFirst",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": "Self.Element",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "removeFirst",
        "type parameters": null,
        "parameters": "Int",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "removeLast",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": "Self.Element",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "removeLast",
        "type parameters": null,
        "parameters": "Int",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "removeSubrange",
        "type parameters": "Self.Index",
        "parameters": "Range<Self.Index>",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "removeSubrange",
        "type parameters": "R",
        "parameters": "R",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "removeAll",
        "type parameters": null,
        "parameters": "where: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "removeAll",
        "type parameters": null,
        "parameters": "keepingCapacity: Bool",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "popLast",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": "Self.Element?",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "contains",
        "type parameters": null,
        "parameters": "Self.Element",
        "throws": "false",
        "return_type": "Bool",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "contains",
        "type parameters": null,
        "parameters": "where: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Bool",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "allSatisfy",
        "type parameters": null,
        "parameters": "(Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Bool",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "first",
        "type parameters": null,
        "parameters": "where: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.Element?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "firstIndex",
        "type parameters": null,
        "parameters": "of: Self.Element",
        "throws": "false",
        "return_type": "Self.Index?",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "index",
        "type parameters": null,
        "parameters": "of: Self.Element",
        "throws": "false",
        "return_type": "Self.Index?",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "firstIndex",
        "type parameters": null,
        "parameters": "where: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.Index?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "last",
        "type parameters": null,
        "parameters": "where: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.Element?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "lastIndex",
        "type parameters": null,
        "parameters": "of: Self.Element",
        "throws": "false",
        "return_type": "Self.Index?",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "lastIndex",
        "type parameters": null,
        "parameters": "where: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.Index?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "min",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": "Self.Element?",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "min",
        "type parameters": null,
        "parameters": "by: (Self.Element, Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.Element?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "max",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": "Self.Element?",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "max",
        "type parameters": null,
        "parameters": "by: (Self.Element, Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.Element?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "prefix",
        "type parameters": null,
        "parameters": "Int",
        "throws": "false",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "prefix",
        "type parameters": null,
        "parameters": "through: Self.Index",
        "throws": "false",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "prefix",
        "type parameters": null,
        "parameters": "upTo: Self.Index",
        "throws": "false",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "prefix",
        "type parameters": null,
        "parameters": "while: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "suffix",
        "type parameters": null,
        "parameters": "Int",
        "throws": "false",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "suffix",
        "type parameters": null,
        "parameters": "from: Self.Index",
        "throws": "false",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "dropFirst",
        "type parameters": null,
        "parameters": "Int",
        "throws": "false",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "dropLast",
        "type parameters": null,
        "parameters": "Int",
        "throws": "false",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "drop",
        "type parameters": null,
        "parameters": "while: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.SubSequence",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "map",
        "type parameters": "T",
        "parameters": "(Self.Element) throws -> T",
        "throws": "true",
        "return_type": "[T]",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "flatMap",
        "type parameters": "SegmentOfResult",
        "parameters": "(Self.Element) throws -> SegmentOfResult",
        "throws": "true",
        "return_type": "[SegmentOfResult.Element]",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "flatMap",
        "type parameters": "ElementOfResult",
        "parameters": "(Self.Element) throws -> ElementOfResult?",
        "throws": "true",
        "return_type": "[ElementOfResult]",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "compactMap",
        "type parameters": "ElementOfResult",
        "parameters": "(Self.Element) throws -> ElementOfResult?",
        "throws": "true",
        "return_type": "[ElementOfResult]",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "reduce",
        "type parameters": "Result",
        "parameters": "Result, (Result, Self.Element) throws -> Result",
        "throws": "true",
        "return_type": "Result",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "reduce",
        "type parameters": "Result",
        "parameters": "into: Result, (inout Result, Self.Element) throws -> ()",
        "throws": "true",
        "return_type": "Result",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "forEach",
        "type parameters": null,
        "parameters": "(Self.Element) throws -> Void",
        "throws": "true",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "enumerated",
        "type parameters": "Self",
        "parameters": "",
        "throws": "false",
        "return_type": "EnumeratedSequence<Self>",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "makeIterator",
        "type parameters": "Self",
        "parameters": "",
        "throws": "false",
        "return_type": "IndexingIterator<Self>",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "sort",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "sort",
        "type parameters": null,
        "parameters": "by: (Self.Element, Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "sorted",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": "[Self.Element]",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "sorted",
        "type parameters": null,
        "parameters": "by: (Self.Element, Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "[Self.Element]",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "reverse",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "reversed",
        "type parameters": "Self",
        "parameters": "",
        "throws": "false",
        "return_type": "ReversedCollection<Self>",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "shuffle",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "shuffle",
        "type parameters": "T",
        "parameters": "using: inout T",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "shuffled",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": "[Self.Element]",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "shuffled",
        "type parameters": "T",
        "parameters": "using: inout T",
        "throws": "false",
        "return_type": "[Self.Element]",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "partition",
        "type parameters": null,
        "parameters": "by: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Self.Index",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "swapAt",
        "type parameters": null,
        "parameters": "Self.Index, Self.Index",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "split",
        "type parameters": null,
        "parameters": "separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool",
        "throws": "false",
        "return_type": "[Self.SubSequence]",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "split",
        "type parameters": null,
        "parameters": "maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "[Self.SubSequence]",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "joined",
        "type parameters": "Self",
        "parameters": "",
        "throws": "false",
        "return_type": "FlattenSequence<Self>",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "joined",
        "type parameters": "Separator",
        "parameters": "separator: Separator",
        "throws": "false",
        "return_type": "JoinedSequence<Self>",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "joined",
        "type parameters": null,
        "parameters": "separator: String",
        "throws": "false",
        "return_type": "String",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "joined",
        "type parameters": null,
        "parameters": "separator: String",
        "throws": "false",
        "return_type": "String",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "applying",
        "type parameters": "Self.Element",
        "parameters": "CollectionDifference<Self.Element>",
        "throws": "false",
        "return_type": "Self?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "difference",
        "type parameters": "C",
        "parameters": "from: C",
        "throws": "false",
        "return_type": "CollectionDifference<Self.Element>",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "difference",
        "type parameters": "C",
        "parameters": "from: C, by: (C.Element, Self.Element) -> Bool",
        "throws": "false",
        "return_type": "CollectionDifference<Self.Element>",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "==",
        "type parameters": "Element",
        "parameters": "Array<Element>, Array<Element>",
        "throws": "false",
        "return_type": "Bool",
        "conditional": "true",
        "static": "true",
        "is_constructor": "false"
      },
      {
        "name": "!=",
        "type parameters": null,
        "parameters": "Self, Self",
        "throws": "false",
        "return_type": "Bool",
        "conditional": "false",
        "static": "true",
        "is_constructor": "false"
      },
      {
        "name": "elementsEqual",
        "type parameters": "OtherSequence",
        "parameters": "OtherSequence",
        "throws": "false",
        "return_type": "Bool",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "elementsEqual",
        "type parameters": "OtherSequence",
        "parameters": "OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Bool",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "starts",
        "type parameters": "PossiblePrefix",
        "parameters": "with: PossiblePrefix",
        "throws": "false",
        "return_type": "Bool",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "starts",
        "type parameters": "PossiblePrefix",
        "parameters": "with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Bool",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "lexicographicallyPrecedes",
        "type parameters": "OtherSequence",
        "parameters": "OtherSequence",
        "throws": "false",
        "return_type": "Bool",
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "lexicographicallyPrecedes",
        "type parameters": "OtherSequence",
        "parameters": "OtherSequence, by: (Self.Element, Self.Element) throws -> Bool",
        "throws": "true",
        "return_type": "Bool",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "index",
        "type parameters": null,
        "parameters": "after: Int",
        "throws": "false",
        "return_type": "Int",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "formIndex",
        "type parameters": null,
        "parameters": "after: inout Int",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "index",
        "type parameters": null,
        "parameters": "before: Int",
        "throws": "false",
        "return_type": "Int",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "formIndex",
        "type parameters": null,
        "parameters": "before: inout Int",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "index",
        "type parameters": null,
        "parameters": "Int, offsetBy: Int",
        "throws": "false",
        "return_type": "Int",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "formIndex",
        "type parameters": null,
        "parameters": "inout Self.Index, offsetBy: Int",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "index",
        "type parameters": null,
        "parameters": "Int, offsetBy: Int, limitedBy: Int",
        "throws": "false",
        "return_type": "Int?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "formIndex",
        "type parameters": null,
        "parameters": "inout Self.Index, offsetBy: Int, limitedBy: Self.Index",
        "throws": "false",
        "return_type": "Bool",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "distance",
        "type parameters": null,
        "parameters": "from: Int, to: Int",
        "throws": "false",
        "return_type": "Int",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "withUnsafeBufferPointer",
        "type parameters": "R",
        "parameters": "(UnsafeBufferPointer<Element>) throws -> R",
        "throws": "true",
        "return_type": "R",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "withUnsafeMutableBufferPointer",
        "type parameters": "R",
        "parameters": "(inout UnsafeMutableBufferPointer<Element>) throws -> R",
        "throws": "true",
        "return_type": "R",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "withUnsafeBytes",
        "type parameters": "R",
        "parameters": "(UnsafeRawBufferPointer) throws -> R",
        "throws": "true",
        "return_type": "R",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "withUnsafeMutableBytes",
        "type parameters": "R",
        "parameters": "(UnsafeMutableRawBufferPointer) throws -> R",
        "throws": "true",
        "return_type": "R",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "withContiguousStorageIfAvailable",
        "type parameters": "R",
        "parameters": "(UnsafeBufferPointer<Element>) throws -> R",
        "throws": "true",
        "return_type": "R?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "withContiguousMutableStorageIfAvailable",
        "type parameters": "R",
        "parameters": "(inout UnsafeMutableBufferPointer<Element>) throws -> R",
        "throws": "true",
        "return_type": "R?",
        "conditional": "false",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "encode",
        "type parameters": null,
        "parameters": "to: Encoder",
        "throws": "true",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "encode",
        "type parameters": null,
        "parameters": "to: Encoder, configuration: Element.EncodingConfiguration",
        "throws": "true",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      },
      {
        "name": "hash",
        "type parameters": null,
        "parameters": "into: inout Hasher",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "false"
      }
    ],
    [
      {
        "name": "init",
        "type parameters": null,
        "parameters": "",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": "S",
        "parameters": "S",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": "S",
        "parameters": "S",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": null,
        "parameters": "repeating: Element, count: Int",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": "Element",
        "parameters": "unsafeUninitializedCapacity: Int, initializingWith: (inout UnsafeMutableBufferPointer<Element>, inout Int) throws -> Void",
        "throws": "true",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": null,
        "parameters": "from: Decoder",
        "throws": "true",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": null,
        "parameters": "from: Decoder, configuration: Element.DecodingConfiguration",
        "throws": "true",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": "Element",
        "parameters": "MLDataColumn<Element>",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": null,
        "parameters": "MLUntypedColumn",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init?",
        "type parameters": null,
        "parameters": "from: MLDataValue",
        "throws": "false",
        "return_type": null,
        "conditional": "true",
        "static": "false",
        "is_constructor": "true"
      },
      {
        "name": "init",
        "type parameters": null,
        "parameters": "arrayLiteral: Element...",
        "throws": "false",
        "return_type": null,
        "conditional": "false",
        "static": "false",
        "is_constructor": "true"
      }
    ]
  ],
  "fields": [
    [
      {
        "name": "isEmpty",
        "return_type": "Bool",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "count",
        "return_type": "Int",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "capacity",
        "return_type": "Int",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "first",
        "return_type": "Self.Element?",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "last",
        "return_type": "Self.Element?",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "lazy",
        "return_type": "LazySequence<Self>",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "underestimatedCount",
        "return_type": "Int",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "startIndex",
        "return_type": "Int",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "endIndex",
        "return_type": "Int",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "description",
        "return_type": "String",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "debugDescription",
        "return_type": "String",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "customMirror",
        "return_type": "Mirror",
        "conditional": "false",
        "static": "false"
      },
      {
        "name": "dataValue",
        "return_type": "MLDataValue",
        "conditional": "true",
        "static": "false"
      },
      {
        "name": "dataValueType",
        "return_type": "MLDataValue.ValueType",
        "conditional": "true",
        "static": "true"
      },
      {
        "name": "hashValue",
        "return_type": "Int",
        "conditional": "true",
        "static": "false"
      }
    ]
  ],
  "conforms_to": [
    [
      {
        "name": "AppExtensionScene",
        "conditional": "false"
      },
      {
        "name": "BidirectionalCollection",
        "conditional": "false"
      },
      {
        "name": "CVarArg",
        "conditional": "false"
      },
      {
        "name": "Collection",
        "conditional": "false"
      },
      {
        "name": "ContiguousBytes",
        "conditional": "false"
      },
      {
        "name": "CustomDebugStringConvertible",
        "conditional": "false"
      },
      {
        "name": "CustomReflectable",
        "conditional": "false"
      },
      {
        "name": "CustomStringConvertible",
        "conditional": "false"
      },
      {
        "name": "DataProtocol",
        "conditional": "false"
      },
      {
        "name": "DecodableWithConfiguration",
        "conditional": "false"
      },
      {
        "name": "EncodableWithConfiguration",
        "conditional": "false"
      },
      {
        "name": "ExpressibleByArrayLiteral",
        "conditional": "false"
      },
      {
        "name": "MLDataValueConvertible",
        "conditional": "false"
      },
      {
        "name": "MutableCollection",
        "conditional": "false"
      },
      {
        "name": "MutableDataProtocol",
        "conditional": "false"
      },
      {
        "name": "PositionScaleRange",
        "conditional": "false"
      },
      {
        "name": "RandomAccessCollection",
        "conditional": "false"
      },
      {
        "name": "RangeReplaceableCollection",
        "conditional": "false"
      },
      {
        "name": "RelationshipCollection",
        "conditional": "false"
      },
      {
        "name": "ResultsCollection",
        "conditional": "false"
      },
      {
        "name": "ScaleDomain",
        "conditional": "false"
      },
      {
        "name": "ScaleRange",
        "conditional": "false"
      },
      {
        "name": "Sequence",
        "conditional": "false"
      },
      {
        "name": "Decodable",
        "conditional": "true"
      },
      {
        "name": "Encodable",
        "conditional": "true"
      },
      {
        "name": "Equatable",
        "conditional": "true"
      },
      {
        "name": "Hashable",
        "conditional": "true"
      },
      {
        "name": "Sendable",
        "conditional": "true"
      }
    ]
  ],
  "typealiases": [
    [
      {
        "name": "EncodingConfiguration",
        "conditional": "true"
      },
      {
        "name": "DecodingConfiguration",
        "conditional": "true"
      },
      {
        "name": "Index",
        "conditional": "false"
      },
      {
        "name": "Indices",
        "conditional": "false"
      },
      {
        "name": "Iterator",
        "conditional": "false"
      },
      {
        "name": "ArrayLiteralElement",
        "conditional": "false"
      },
      {
        "name": "SubSequence",
        "conditional": "false"
      }
    ]
  ],
  "inherits": [
    []
  ],
  "language": "swift"
}