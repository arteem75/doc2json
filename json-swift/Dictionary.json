{
  "frozen": "true",
  "data_type": "struct",
  "name": "Dictionary",
  "type_parameters": "['Key', 'Value']",
  "methods": [
    {
      "name": "subscript",
      "type parameters": null,
      "parameters": "Key",
      "throws": "false",
      "return_type": "Value?",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "subscript",
      "type parameters": null,
      "parameters": "Key, default _: () -> Value",
      "throws": "false",
      "return_type": "Value",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "index",
      "type parameters": null,
      "parameters": "forKey: Key",
      "throws": "false",
      "return_type": "Dictionary<Key, Value>.Index?",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "subscript",
      "type parameters": null,
      "parameters": "Dictionary<Key, Value>.Index",
      "throws": "false",
      "return_type": "Dictionary<Key, Value>.Element",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "randomElement",
      "type parameters": null,
      "parameters": "",
      "throws": "false",
      "return_type": "Self.Element?",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "randomElement",
      "type parameters": "T",
      "parameters": "using: inout T",
      "throws": "false",
      "return_type": "Self.Element?",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "updateValue",
      "type parameters": null,
      "parameters": "Value, forKey: Key",
      "throws": "false",
      "return_type": "Value?",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "merge",
      "type parameters": null,
      "parameters": "[Key : Value], uniquingKeysWith: (Value, Value) throws -> Value",
      "throws": "true",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "merge",
      "type parameters": "S",
      "parameters": "S, uniquingKeysWith: (Value, Value) throws -> Value",
      "throws": "true",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "merging",
      "type parameters": null,
      "parameters": "[Key : Value], uniquingKeysWith: (Value, Value) throws -> Value",
      "throws": "true",
      "return_type": "[Key : Value]",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "merging",
      "type parameters": "S",
      "parameters": "S, uniquingKeysWith: (Value, Value) throws -> Value",
      "throws": "true",
      "return_type": "[Key : Value]",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "reserveCapacity",
      "type parameters": null,
      "parameters": "Int",
      "throws": "false",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "filter",
      "type parameters": null,
      "parameters": "(Dictionary<Key, Value>.Element) throws -> Bool",
      "throws": "true",
      "return_type": "[Key : Value]",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "removeValue",
      "type parameters": null,
      "parameters": "forKey: Key",
      "throws": "false",
      "return_type": "Value?",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "remove",
      "type parameters": null,
      "parameters": "at: Dictionary<Key, Value>.Index",
      "throws": "false",
      "return_type": "Dictionary<Key, Value>.Element",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "removeAll",
      "type parameters": null,
      "parameters": "keepingCapacity: Bool",
      "throws": "false",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "==",
      "type parameters": null,
      "parameters": "[Key : Value], [Key : Value]",
      "throws": "false",
      "return_type": "Bool",
      "conditional": "true",
      "static": "true",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "!=",
      "type parameters": null,
      "parameters": "Self, Self",
      "throws": "false",
      "return_type": "Bool",
      "conditional": "false",
      "static": "true",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "forEach",
      "type parameters": null,
      "parameters": "(Self.Element) throws -> Void",
      "throws": "true",
      "return_type": null,
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "enumerated",
      "type parameters": null,
      "parameters": "",
      "throws": "false",
      "return_type": "EnumeratedSequence<Self>",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "makeIterator",
      "type parameters": null,
      "parameters": "",
      "throws": "false",
      "return_type": "Dictionary<Key, Value>.Iterator",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "contains",
      "type parameters": null,
      "parameters": "where: (Self.Element) throws -> Bool",
      "throws": "true",
      "return_type": "Bool",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "allSatisfy",
      "type parameters": null,
      "parameters": "(Self.Element) throws -> Bool",
      "throws": "true",
      "return_type": "Bool",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "first",
      "type parameters": null,
      "parameters": "where: (Self.Element) throws -> Bool",
      "throws": "true",
      "return_type": "Self.Element?",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "firstIndex",
      "type parameters": null,
      "parameters": "where: (Self.Element) throws -> Bool",
      "throws": "true",
      "return_type": "Self.Index?",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "min",
      "type parameters": null,
      "parameters": "by: (Self.Element, Self.Element) throws -> Bool",
      "throws": "true",
      "return_type": "Self.Element?",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "max",
      "type parameters": null,
      "parameters": "by: (Self.Element, Self.Element) throws -> Bool",
      "throws": "true",
      "return_type": "Self.Element?",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "mapValues",
      "type parameters": "T",
      "parameters": "(Value) throws -> T",
      "throws": "true",
      "return_type": "Dictionary<Key, T>",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "reduce",
      "type parameters": "Result",
      "parameters": "Result, (Result, Self.Element) throws -> Result",
      "throws": "true",
      "return_type": "Result",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "reduce",
      "type parameters": "Result",
      "parameters": "into: Result, (inout Result, Self.Element) throws -> ()",
      "throws": "true",
      "return_type": "Result",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "map",
      "type parameters": "T",
      "parameters": "(Self.Element) throws -> T",
      "throws": "true",
      "return_type": "[T]",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "compactMap",
      "type parameters": "ElementOfResult",
      "parameters": "(Self.Element) throws -> ElementOfResult?",
      "throws": "true",
      "return_type": "[ElementOfResult]",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "compactMapValues",
      "type parameters": "T",
      "parameters": "(Value) throws -> T?",
      "throws": "true",
      "return_type": "Dictionary<Key, T>",
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "flatMap",
      "type parameters": "SegmentOfResult",
      "parameters": "(Self.Element) throws -> SegmentOfResult",
      "throws": "true",
      "return_type": "[SegmentOfResult.Element]",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "flatMap",
      "type parameters": "ElementOfResult",
      "parameters": "(Self.Element) throws -> ElementOfResult?",
      "throws": "true",
      "return_type": "[ElementOfResult]",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "sorted",
      "type parameters": null,
      "parameters": "by: (Self.Element, Self.Element) throws -> Bool",
      "throws": "true",
      "return_type": "[Self.Element]",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "shuffled",
      "type parameters": null,
      "parameters": "",
      "throws": "false",
      "return_type": "[Self.Element]",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "shuffled",
      "type parameters": "T",
      "parameters": "using: inout T",
      "throws": "false",
      "return_type": "[Self.Element]",
      "conditional": "false",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "encode",
      "type parameters": null,
      "parameters": "to: Encoder",
      "throws": "true",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "hash",
      "type parameters": null,
      "parameters": "into: inout Hasher",
      "throws": "false",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "false",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": null,
      "parameters": "",
      "throws": "false",
      "return_type": null,
      "conditional": "false",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": null,
      "parameters": "minimumCapacity: Int",
      "throws": "false",
      "return_type": null,
      "conditional": "false",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": "S",
      "parameters": "uniqueKeysWithValues: S",
      "throws": "false",
      "return_type": null,
      "conditional": "false",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": "S",
      "parameters": "S, uniquingKeysWith: (Value, Value) throws -> Value",
      "throws": "true",
      "return_type": null,
      "conditional": "false",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": "S",
      "parameters": "grouping: S, by: (S.Element) throws -> Key",
      "throws": "true",
      "return_type": null,
      "conditional": "false",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": null,
      "parameters": "from: Decoder",
      "throws": "true",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init?",
      "type parameters": null,
      "parameters": "from: MLDataValue.DictionaryType",
      "throws": "false",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init?",
      "type parameters": null,
      "parameters": "from: MLDataValue",
      "throws": "false",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": "S",
      "parameters": "AttributeContainer, including: S.Type",
      "throws": "true",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": "S",
      "parameters": "AttributeContainer, including: KeyPath<AttributeScopes, S.Type>",
      "throws": "true",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": null,
      "parameters": "AttributeContainer",
      "throws": "false",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    },
    {
      "name": "init",
      "type parameters": null,
      "parameters": "dictionaryLiteral: (Key, Value)...",
      "throws": "false",
      "return_type": null,
      "conditional": "true",
      "static": "false",
      "is_constructor": "true",
      "access_mod": "public"
    }
  ],
  "fields": [
    {
      "name": "isEmpty",
      "return_type": "Bool",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "count",
      "return_type": "Int",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "capacity",
      "return_type": "Int",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "keys",
      "return_type": "Dictionary<Key, Value>.Keys",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "values",
      "return_type": "Dictionary<Key, Value>.Values",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "first",
      "return_type": "Self.Element?",
      "conditional": "false",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "lazy",
      "return_type": "LazySequence<Self>",
      "conditional": "false",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "underestimatedCount",
      "return_type": "Int",
      "conditional": "false",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "description",
      "return_type": "String",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "debugDescription",
      "return_type": "String",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "customMirror",
      "return_type": "Mirror",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "dataValue",
      "return_type": "MLDataValue",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    },
    {
      "name": "dataValueType",
      "return_type": "MLDataValue.ValueType",
      "conditional": "true",
      "static": "true",
      "access_mod": "public"
    },
    {
      "name": "hashValue",
      "return_type": "Int",
      "conditional": "true",
      "static": "false",
      "access_mod": "public"
    }
  ],
  "implements": [
    {
      "name": "MLDataValueConvertible",
      "conditional": "false"
    },
    {
      "name": "CVarArg",
      "conditional": "true"
    },
    {
      "name": "Collection",
      "conditional": "true"
    },
    {
      "name": "CustomDebugStringConvertible",
      "conditional": "true"
    },
    {
      "name": "CustomReflectable",
      "conditional": "true"
    },
    {
      "name": "CustomStringConvertible",
      "conditional": "true"
    },
    {
      "name": "Decodable",
      "conditional": "true"
    },
    {
      "name": "Encodable",
      "conditional": "true"
    },
    {
      "name": "Equatable",
      "conditional": "true"
    },
    {
      "name": "ExpressibleByDictionaryLiteral",
      "conditional": "true"
    },
    {
      "name": "Hashable",
      "conditional": "true"
    },
    {
      "name": "Sendable",
      "conditional": "true"
    },
    {
      "name": "Sequence",
      "conditional": "true"
    }
  ],
  "typealiases": [
    {
      "name": "Indices",
      "conditional": "true"
    },
    {
      "name": "Element",
      "conditional": "false"
    }
  ],
  "inherits": [],
  "language": "swift"
}